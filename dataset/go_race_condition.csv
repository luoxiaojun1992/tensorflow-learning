code,label
"var counter int var wg sync.WaitGroup func increment() {	defer wg.Done()	for i := 0; i < 1000; i++ {		value := counter	time.Sleep(time.Millisecond)		counter = value + 1		}}func decrement() {	defer wg.Done()	for i := 0; i < 1000; i++ {		value := counter	time.Sleep(time.Millisecond)		counter = value - 1		}} func main() {	wg.Add(2)	go increment()	go decrement()	wg.Wait()	fmt.Println(Final Counter: counter)}",1
"var counter int var wg sync.WaitGroup var mu sync.Mutex func increment() {	defer wg.Done()	for i := 0; i < 1000; i++ {		mu.Lock()		value := counter	time.Sleep(time.Millisecond)		counter = value + 1		mu.Unlock()	}} func decrement() {	defer wg.Done()	for i := 0; i < 1000; i++ {		mu.Lock()		value := counter time.Sleep(time.Millisecond)		counter = value - 1		mu.Unlock()	}} func main() {	wg.Add(2)	go increment()	go decrement()	wg.Wait()	fmt.Println(Final Counter: counter)}",0
"var total int var wg sync.WaitGroup func processNumber(number int) {	defer wg.Done()	for i := 0; i < 1000; i++ { time.Sleep(time.Millisecond)		total = total + number	}} func main() {	wg.Add(2)	go processNumber(1)	go processNumber(-1)	wg.Wait()	fmt.Println(Final Total: total)}",1
"var total int var wg sync.WaitGroup var mu sync.Mutex func processNumber(number int) {	defer wg.Done()	for i := 0; i < 1000; i++ {		mu.Lock()		time.Sleep(time.Millisecond)		total = total + number		mu.Unlock()	}} func main() {	wg.Add(2)	go processNumber(1)	go processNumber(-1)	wg.Wait()	fmt.Println(Final Total: total)}",0
"var data []int var wg sync.WaitGroup func appendData(value int) {	defer wg.Done()	for i := 0; i < 100; i++ {	time.Sleep(time.Millisecond)		data = append(data value)	}} func main() {	wg.Add(2)	go appendData(1)	go appendData(2)	wg.Wait()	fmt.Println(Final Data: data)}",1
"var data []int var wg sync.WaitGroup var mu sync.Mutex func appendData(value int) {	defer wg.Done()	for i := 0; i < 100; i++ {		mu.Lock()	time.Sleep(time.Millisecond)		data = append(data value)		mu.Unlock()	}} func main() {	wg.Add(2)	go appendData(1)	go appendData(2)	wg.Wait()	fmt.Println(Final Data: data)}",0
